extends homelayout

block homecontent
  <div class="jumbotron">
    <h1 class="display-3">Settings Page</h1>
    <p class="lead">On this, see codes for use with the CORS-enabled API.</p>
    <hr class="m-y-md">
    p.
      In order for this app to work fully, it needs to have the information to
      interface with various API's. When checking for new donations, it will
      look for the Paypal details in two settings #[code paypal_client_id] and
      #[code paypal_secret], which can be entered by copy and pasting their
      names into the <b>Add new setting</b> field in the bottom left section
      and then clicking the plus sign. Then pasting their value into the
      corresponding value field and clicking save.

    p.
      This app consumes <a href="https://developer.paypal.com/docs/api/transaction-search/v1/">
      this Paypal API</a>, and to authenticate it uses the mechanism described
      in <a href="https://developer.paypal.com/docs/api/overview/">Paypal's API Overview</a>.
      In order to start using it, credentials can be created in the 
      <a href="https://developer.paypal.com/developer/applications">Developer Dashboard</a> 
      by following <a href="https://developer.paypal.com/docs/api/overview/#get-credentials">these instructions</a>.
      In short, you navigate to navigate to the <b>REST API apps</b> section and
      click <b>Create App</b>. The name does not matter &emdash; the important
      information is the <b>Client ID</b> and <b>Secret</b>.


    if (keys && keys.length)
      p.lead
        .
          Paste the snippet below into a page on a website to show snowflakes.
        .script-displayer
          pre.m-0
            code.
              #{'<script>'}
                var script = document.createElement('script');
                script.type = 'text/javascript';
                script.src = '<a href='#{fullBase}/api/script'>#{fullBase}/api/script</a>';
                document.getElementsByTagName('head')[0].appendChild(script);
                window.SNOWFLAKES = window.SNOWFLAKES || {};
                window.SNOWFLAKES.code = '#{keys[0].code}';
              #{'</script>'}
    else
      p.lead.
        Please generate a key below by clicking the 'Add Key' button, then the
        script to add snowflakes will appear in place of this notice.

  </div>

  script.
    var newElement = (field) => ('<div class="form-group row">' +
        '<label for="input' + field +'" class="col-sm-4 form-control-label">'+
          field + '</label>' +
        '<div class="col-sm-8">' +
          '<input type="text" class="form-control" name="' + field +
            '" id="input' + field + '" placeholder="value">' +
        '</div>' +
      '</div>');
    function addNewAndReset() {
      var newSettingName = $('#new-setting-name').val();
      $('#settings-form').prepend(newElement(newSettingName));
    }

    $(() => {
      $('#fake-form').on('submit', e => {
        e.preventDefault();
        addNewAndReset();
        document.getElementById('fake-form').reset();
      });
    });

  .container
    .row
      .col-md
        h3 Codes
        .mb-4
          <a role="button" href="#{baseUrl}/home/settings/clearcodes" type="button" class="btn btn-danger btn-sm">
            i.fa.fa-trash
            span Clear Codes
          </a>
          <a role="button" href="#{baseUrl}/home/settings/newcode" type="button" class="btn btn-success btn-sm">
            i.fa.fa-plus
            span Add key
          </a>

        <table class="table table-striped table-hover">
          <thead>
            <tr>
              <th>id</th>
              <th>code</th>
            </tr>
          </thead>
          <tbody>
            each key in keys
              <tr><td>#{key.id}</td><td>#{key.code}</td></tr>
          </tbody>
        </table>

      .col-md
        h3 Settings
        <form id="fake-form" class="mb-4">
          <div class="input-group">
            <input type="text" class="form-control" id="new-setting-name" placeholder="Add new setting">
            <span class="input-group-btn">
              <button id="add-new" class="btn btn-default" type="submit">
                <i class="fa fa-plus"></i>
              </button>
            </span>
          </div>
        </form>
        <form id="settings-form" method="post">
          each setting in settings
            <div class="form-group row">
              <label for="input#{setting.field}" class="col-sm-4 form-control-label">#{setting.field}</label>
              <div class="col-sm-8">
                <input type="text" class="form-control" name="#{setting.field}" id="input#{setting.field}" value="#{setting.value}">
              </div>
            </div>

          <div class="form-group row">
            <div class="col-sm-offset-2 col-sm-10">
              <button type="submit" class="btn btn-secondary">Save</button>
            </div>
          </div>
        </form>
